{
  "version": 5,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 24,
    "patch": 0
  },
  "configurePresets": [
    {
      "name": "dev-mode",
      "hidden": true,
      "cacheVariables": {
        "TWIG_CPP_DATADOG_CLIENT_DEVELOPER_MODE": "ON",
        "VCPKG_MANIFEST_FEATURES": "test"
      }
    },
    {
      "name": "vcpkg",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
        "VCPKG_OVERLAY_TRIPLETS": "${sourceDir}/triplets"
      }
    },
    {
      "name": "vcpkg-win64-static",
      "hidden": true,
      "cacheVariables": {
        "VCPKG_TARGET_TRIPLET": "x64-windows-static-md"
      }
    },
    {
      "name": "clang-tidy",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_CLANG_TIDY": "clang-tidy-18;--header-filter=^${sourceDir}/(include|src|source|test)"
      }
    },
    {
      "name": "clang-15",
      "hidden": true,
      "environment": {
        "CXX": "clang++-15",
        "CC": "clang-15",
        "LLVM_SYMBOLIZER_PATH": "llvm-symbolizer-15"
      },
      "cacheVariables": {
        "LLVM_COV_COMMAND": "llvm-cov-15",
        "LLVM_PROFDATA_COMMAND": "llvm-profdata-15"
      }
    },
    {
      "name": "clang-16",
      "hidden": true,
      "environment": {
        "CXX": "clang++-16",
        "CC": "clang-16",
        "LLVM_SYMBOLIZER_PATH": "llvm-symbolizer-16"
      },
      "cacheVariables": {
        "LLVM_COV_COMMAND": "llvm-cov-16",
        "LLVM_PROFDATA_COMMAND": "llvm-profdata-16"
      }
    },
    {
      "name": "clang-17",
      "hidden": true,
      "environment": {
        "CXX": "clang++-17",
        "CC": "clang-17",
        "LLVM_SYMBOLIZER_PATH": "llvm-symbolizer-17"
      },
      "cacheVariables": {
        "LLVM_COV_COMMAND": "llvm-cov-17",
        "LLVM_PROFDATA_COMMAND": "llvm-profdata-17"
      }
    },
    {
      "name": "clang-18",
      "hidden": true,
      "environment": {
        "CXX": "clang++-18",
        "CC": "clang-18",
        "LLVM_SYMBOLIZER_PATH": "llvm-symbolizer-18"
      },
      "cacheVariables": {
        "LLVM_COV_COMMAND": "llvm-cov-18",
        "LLVM_PROFDATA_COMMAND": "llvm-profdata-18"
      }
    },
    {
      "name": "gcc-11",
      "hidden": true,
      "environment": {
        "CXX": "g++-11",
        "CC": "gcc-11"
      }
    },
    {
      "name": "gcc-12",
      "hidden": true,
      "environment": {
        "CXX": "g++-12",
        "CC": "gcc-12"
      }
    },
    {
      "name": "gcc-13",
      "hidden": true,
      "environment": {
        "CXX": "g++-13",
        "CC": "gcc-13"
      }
    },
    {
      "name": "ci-std",
      "description": "This preset makes sure the project actually builds with at least the specified standard",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_EXTENSIONS": "OFF",
        "CMAKE_CXX_STANDARD": "23",
        "CMAKE_CXX_STANDARD_REQUIRED": "ON"
      }
    },
    {
      "name": "flags-linux",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=3 -fstack-protector-strong -fcf-protection=full -fstack-clash-protection -Werror -Wall -Wextra -Wpedantic -Wconversion -Wsign-conversion -Wcast-qual -Wformat=2 -Wundef -Werror=float-equal -Wshadow -Wcast-align -Wunused -Wnull-dereference -Wdouble-promotion -Wimplicit-fallthrough -Wextra-semi -Woverloaded-virtual -Wnon-virtual-dtor -Wold-style-cast",
        "CMAKE_EXE_LINKER_FLAGS": "-Wl,--allow-shlib-undefined,--as-needed,-z,noexecstack,-z,relro,-z,now",
        "CMAKE_SHARED_LINKER_FLAGS": "-Wl,--allow-shlib-undefined,--as-needed,-z,noexecstack,-z,relro,-z,now"
      }
    },
    {
      "name": "flags-windows",
      "description": "Note that all the flags after /W4 are required for MSVC to conform to the language standard",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "/sdl /analyze /analyze:external- /guard:cf /utf-8 /diagnostics:caret /w14165 /w44242 /w44254 /w44263 /w34265 /w34287 /w44296 /w44365 /w44388 /w44464 /w14545 /w14546 /w14547 /w14549 /w14555 /w34619 /w34640 /w24826 /w14905 /w14906 /w14928 /w45038 /W4 /permissive- /volatile:iso /Zc:inline /Zc:preprocessor /Zc:enumTypes /Zc:lambda /Zc:__cplusplus /Zc:externConstexpr /Zc:throwingNew /EHsc /wd4365",
        "CMAKE_EXE_LINKER_FLAGS": "/machine:x64 /guard:cf"
      }
    },
    {
      "name": "ci-linux",
      "generator": "Ninja",
      "hidden": true,
      "inherits": [
        "flags-linux",
        "ci-std"
      ],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "VCPKG_TARGET_TRIPLET": "x64-linux-release",
        "VCPKG_HOST_TRIPLET": "x64-linux-release"
      }
    },
    {
      "name": "ci-win64",
      "inherits": [
        "flags-windows",
        "ci-std"
      ],
      "generator": "Visual Studio 17 2022",
      "architecture": "x64",
      "hidden": true
    },
    {
      "name": "coverage-linux",
      "binaryDir": "${sourceDir}/build/coverage",
      "inherits": [
        "clang-18",
        "dev-mode",
        "ci-linux"
      ],
      "hidden": true,
      "cacheVariables": {
        "ENABLE_COVERAGE": "ON",
        "CODE_COVERAGE": "ON",
        "CMAKE_BUILD_TYPE": "Coverage",
        "CMAKE_CXX_FLAGS_COVERAGE": "-Og -g -fprofile-instr-generate -fcoverage-mapping",
        "CMAKE_EXE_LINKER_FLAGS_COVERAGE": "-fprofile-instr-generate -fcoverage-mapping",
        "CMAKE_SHARED_LINKER_FLAGS_COVERAGE": "-fprofile-instr-generate -fcoverage-mapping",
        "CMAKE_MAP_IMPORTED_CONFIG_COVERAGE": "Coverage;RelWithDebInfo;Release;Debug;",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON"
      }
    },
    {
      "name": "sanitize-linux",
      "binaryDir": "${sourceDir}/build/sanitize",
      "inherits": [
        "ci-linux"
      ],
      "hidden": true,
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Sanitize",
        "CMAKE_CXX_FLAGS_SANITIZE": "-O2 -g -fsanitize=address,undefined -fno-omit-frame-pointer -fno-common",
        "CMAKE_MAP_IMPORTED_CONFIG_SANITIZE": "Sanitize;RelWithDebInfo;Release;Debug;",
        "VCPKG_TARGET_TRIPLET": "sanitize-x64-linux",
        "VCPKG_HOST_TRIPLET": "sanitize-x64-linux"
      }
    },
    {
      "name": "ci-coverage",
      "inherits": [
        "coverage-linux",
        "vcpkg"
      ],
      "cacheVariables": {
        "CMAKE_COVERAGE_OUTPUT_DIRECTORY": "${sourceDir}/build/coverage/ccov"
      }
    },
    {
      "name": "ci-vcpkg",
      "description": "build which does not add the vcpkg::test feature and therefore packages",
      "binaryDir": "${sourceDir}/build/ci-vcpkg",
      "inherits": [
        "vcpkg",
        "ci-linux",
        "clang-18"
      ]
    },
    {
      "name": "ci-sanitize",
      "binaryDir": "${sourceDir}/build/sanitize",
      "inherits": [
        "sanitize-linux",
        "dev-mode",
        "vcpkg",
        "clang-18"
      ]
    },
    {
      "name": "ci-build",
      "binaryDir": "${sourceDir}/build",
      "hidden": true
    },
    {
      "name": "ci-ubuntu-clang-18",
      "inherits": [
        "ci-build",
        "ci-linux",
        "clang-tidy",
        "vcpkg",
        "dev-mode",
        "clang-18"
      ]
    },
    {
      "name": "ci-ubuntu-gcc-13",
      "inherits": [
        "ci-build",
        "ci-linux",
        "vcpkg",
        "dev-mode",
        "gcc-13"
      ]
    },
    {
      "name": "ci-windows",
      "inherits": [
        "ci-build",
        "ci-win64",
        "dev-mode",
        "vcpkg",
        "vcpkg-win64-static"
      ]
    },
    {
      "name": "release",
      "inherits": [
        "ci-build",
        "ci-linux",
        "vcpkg",
        "gcc-13"
      ]
    }
  ]
}
